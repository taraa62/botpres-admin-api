enum TypeMessanger{
    TELEGRAM
    WEB
    VIBER
    WHATSAPP
    FACEBOOK

}

input ClientInfo{
    name:String
    lastname:String
    email:String
    phone:String
    typeMessanger:TypeMessanger!
    messangerID:String
    operatorLogin:String!
    selectGirl:String
    statusEnd: String!
}

type ResultDrop{
    status:String
    error:String
}

type MessageEntity{
    id: String
    conversation:String
}


input ClientEntity {
    id: String
    created: Date
    updated: Date
    name: String
    email: String
    phone: String
    appendMessage:Boolean
}

type ClientEntityOut {
    id: String
    created: Date
    updated: Date
    name: String
    email: String
    phone: String
    messages:[MessageEntity]
}

type Query {
    test:String
    dropTable(table:String!):ResultDrop
    # statistic
    clients:[ClientEntityOut]
    clientsOf(option:ClientEntity):[ClientEntityOut]
}

type WorkerRO{
    isNewUser:Boolean!
    isCreate:Boolean!
}


type Mutation {
    addChat(client:ClientInfo!, mess:String!):WorkerRO

}

